<link rel="stylesheet" href="{{ 'component-list-menu.css' | asset_url }}" media="print" onload="this.media='all'">
<link rel="stylesheet" href="{{ 'component-search.css' | asset_url }}" media="print" onload="this.media='all'">
<link rel="stylesheet" href="{{ 'component-menu-drawer.css' | asset_url }}" media="print" onload="this.media='all'">
<link
  rel="stylesheet"
  href="{{ 'component-cart-notification.css' | asset_url }}"
  media="print"
  onload="this.media='all'"
>

{%- if settings.predictive_search_enabled -%}
  <link rel="stylesheet" href="{{ 'component-price.css' | asset_url }}" media="print" onload="this.media='all'">
{%- endif -%}

{%- if section.settings.menu_type_desktop == 'mega' -%}
  <link rel="stylesheet" href="{{ 'component-mega-menu.css' | asset_url }}" media="print" onload="this.media='all'">
{%- endif -%}

<style>
  header-drawer {
    justify-self: start;
    margin-left: -1.2rem;
  }

  .header-strip {
    width: 100%;
    position: relative;
    display: block;
    overflow: hidden;
  }

  .header-strip__container {
    max-width: var(--page-width);
    margin: 0 auto;
    position: relative;
    height: 100%;
  }

  .header-strip__image {
    width: 100%;
    height: 100%;
    object-fit: cover;

  }

  .header-strip__color {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    z-index: 1;
  }

  .header__icon--search .testament--icon-theme-search .testament--icon-theme-bag {
    width: 2rem;
    height: 2rem;
  }

  .header__icon--search .svg-wrapper {
    width: 2rem;
    height: 2rem;
  }

  .header__icon .svg-wrapper {
    width: 2rem;
    height: 2rem;
  }

  .header__icon .icon {
    width: 2rem;
    height: 2rem;
  }

  .header__icon--account .svg-wrapper {
    width: 2rem;
    height: 2rem;
  }

  .header__icon--cart .svg-wrapper {
    width: 2rem;
    height: 2rem;
  }

  {%- if section.settings.sticky_header_type == 'reduce-logo-size' -%}
    .scrolled-past-header .header__heading-logo-wrapper {
      width: 75%;
    }
  {%- endif -%}

  {%- if section.settings.menu_type_desktop != "drawer" -%}
    @media screen and (min-width: 990px) {
      header-drawer {
        display: none;
      }
    }
  {%- endif -%}

  .menu-drawer-container {
    display: flex;
  }

  .list-menu {
    list-style: none;
    padding: 0;
    margin: 0;
  }

  .list-menu--inline {
    display: inline-flex;
    flex-wrap: wrap;
  }

  summary.list-menu__item {
    padding-right: 2.7rem;
  }

  .list-menu__item {
    display: flex;
    font-weight: 500;
    align-items: center;
    line-height: calc(1 + 0.3 / var(--font-body-scale));
  }

  .list-menu__item--link {
    text-decoration: none;
    padding-bottom: 1rem;
    padding-top: 1rem;
    line-height: calc(1 + 0.8 / var(--font-body-scale));
  }

  .mega-menu__title {
    margin: 0 0 1.5rem;
    padding: 0 1rem;
    text-align: center;
    width: 100%;
  }

  .mega-menu__title h2,
  .mega-menu__title h3,
  .mega-menu__title h4 {
    margin: 0;
    font-weight: 500;
  }

  @media screen and (min-width: 750px) {
    .list-menu__item--link {
      padding-bottom: 0.5rem;
      padding-top: 0.5rem;
    }
  }

  {%- for block in section.blocks -%}
    {%- if block.type == 'menu_link_color' and block.settings.menu_link_handle != blank and block.settings.link_color != blank -%}
      #HeaderMenu-{{ block.settings.menu_link_handle }}-{{ block.settings.menu_link_handle }},
      #HeaderMenu-{{ block.settings.menu_link_handle }},
      #HeaderDrawer-{{ block.settings.menu_link_handle }} {
        color: {{ block.settings.link_color }} !important;
      }
      #HeaderMenu-{{ block.settings.menu_link_handle }}-{{ block.settings.menu_link_handle }} span,
      #HeaderMenu-{{ block.settings.menu_link_handle }} span,
      #HeaderDrawer-{{ block.settings.menu_link_handle }} span {
        color: {{ block.settings.link_color }} !important;
      }
    {%- endif -%}
  {%- endfor -%}
</style>

{%- style -%}
  .header {
    padding: {{ section.settings.padding_top | times: 0.5 | round: 0 }}px 3rem {{ section.settings.padding_bottom | times: 0.5 | round: 0 }}px 3rem;
  }

  .section-header {
    position: sticky; /* This is for fixing a Safari z-index issue. PR #2147 */
    margin-bottom: {{ section.settings.margin_bottom | times: 0.75 | round: 0 }}px;
  }

  @media screen and (min-width: 750px) {
    .section-header {
      margin-bottom: {{ section.settings.margin_bottom }}px;
    }
  }

  @media screen and (min-width: 990px) {
    .header {
      padding-top: {{ section.settings.padding_top }}px;
      padding-bottom: {{ section.settings.padding_bottom }}px;
    }
  }
{%- endstyle -%}

<script src="{{ 'cart-notification.js' | asset_url }}" defer="defer"></script>

{%- liquid
  for block in section.blocks
    if block.type == '@app'
      assign has_app_block = true
    endif
  endfor
-%}

{% liquid
  assign header_tag = 'div'

  if section.settings.sticky_header_type != 'none'
    assign header_tag = 'sticky-header'
  endif
%}

<{{ header_tag }}
  {% if header_tag == 'sticky-header' %}
    data-sticky-type="{{ section.settings.sticky_header_type }}"
  {% endif %}
  class="header-wrapper color-{{ section.settings.color_scheme }} gradient{% if section.settings.show_line_separator %} header-wrapper--border-bottom{% endif %}"
>
  {%- liquid
    assign social_links = false
    assign localization_forms = false

    if settings.social_twitter_link != blank or settings.social_facebook_link != blank or settings.social_pinterest_link != blank or settings.social_instagram_link != blank or settings.social_youtube_link != blank or settings.social_vimeo_link != blank or settings.social_tiktok_link != blank or settings.social_tumblr_link != blank or settings.social_snapchat_link != blank
      assign social_links = true
    endif

    if localization.available_countries.size > 1 and section.settings.enable_country_selector or section.settings.enable_language_selector and localization.available_languages.size > 1
      assign localization_forms = true
    endif
  -%}
  <header class="header header--{{ section.settings.logo_position }} header--mobile-{{ section.settings.mobile_logo_position }} page-width{% if section.settings.menu_type_desktop == 'drawer' %} drawer-menu{% endif %}{% if section.settings.menu != blank %} header--has-menu{% endif %}{% if has_app_block %} header--has-app{% endif %}{% if social_links %} header--has-social{% endif %}{% if shop.customer_accounts_enabled %} header--has-account{% endif %}{% if localization_forms %} header--has-localizations{% endif %}">
    {%- liquid
      if section.settings.menu != blank
        render 'header-drawer'
      endif

      if section.settings.logo_position == 'top-center' or section.settings.menu == blank
        render 'header-search', input_id: 'Search-In-Modal-1'
      endif
    -%}

    {%- if section.settings.logo_position != 'middle-center' -%}
      {%- if request.page_type == 'index' -%}
        <h1 class="header__heading">
      {%- endif -%}
      <a href="{{ routes.root_url }}" class="header__heading-link link link--text focus-inset">
        {%- if settings.logo != blank -%}
          <div class="header__heading-logo-wrapper">
            {%- assign logo_alt = settings.logo.alt | default: shop.name | escape -%}
            {%- assign logo_height = settings.logo_width | divided_by: settings.logo.aspect_ratio -%}
            {% capture sizes %}(max-width: {{ settings.logo_width | times: 2 }}px) 50vw, {{ settings.logo_width }}px{% endcapture %}
            {% capture widths %}{{ settings.logo_width }}, {{ settings.logo_width | times: 1.5 | round }}, {{ settings.logo_width | times: 2 }}{% endcapture %}
            {{
              settings.logo
              | image_url: width: 600
              | image_tag:
                class: 'header__heading-logo motion-reduce',
                widths: widths,
                height: logo_height,
                width: settings.logo_width,
                alt: logo_alt,
                sizes: sizes,
                preload: true
            }}
          </div>
        {%- else -%}
          <span class="h2">{{ shop.name }}</span>
        {%- endif -%}
      </a>
      {%- if request.page_type == 'index' -%}
        </h1>
      {%- endif -%}
    {%- endif -%}

    {%- liquid
      if section.settings.menu != blank
        if section.settings.menu_type_desktop == 'dropdown'
          render 'header-dropdown-menu'
        elsif section.settings.menu_type_desktop != 'drawer'
          render 'header-mega-menu'
        endif
      endif
    %}

    {%- if section.settings.logo_position == 'middle-center' -%}
      {%- if request.page_type == 'index' -%}
        <h1 class="header__heading">
      {%- endif -%}
      <a href="{{ routes.root_url }}" class="header__heading-link link link--text focus-inset">
        {%- if settings.logo != blank -%}
          <div class="header__heading-logo-wrapper">
            {%- assign logo_alt = settings.logo.alt | default: shop.name | escape -%}
            {%- assign logo_height = settings.logo_width | divided_by: settings.logo.aspect_ratio -%}
            {% capture sizes %}(min-width: 750px) {{ settings.logo_width }}px, 50vw{% endcapture %}
            {% capture widths %}{{ settings.logo_width }}, {{ settings.logo_width | times: 1.5 | round }}, {{ settings.logo_width | times: 2 }}{% endcapture %}
            {{
              settings.logo
              | image_url: width: 600
              | image_tag:
                class: 'header__heading-logo',
                widths: widths,
                height: logo_height,
                width: settings.logo_width,
                alt: logo_alt,
                sizes: sizes,
                preload: true
            }}
          </div>
        {%- else -%}
          <span class="h2">{{ shop.name }}</span>
        {%- endif -%}
      </a>
      {%- if request.page_type == 'index' -%}
        </h1>
      {%- endif -%}
    {%- endif -%}

    <div class="header__icons{% if section.settings.enable_country_selector or section.settings.enable_language_selector %} header__icons--localization header-localization{% endif %}">
      <div class="desktop-localization-wrapper">
        {%- if section.settings.enable_country_selector and localization.available_countries.size > 1 -%}
          <localization-form class="small-hide medium-hide" data-prevent-hide>
            {%- form 'localization', id: 'HeaderCountryForm', class: 'localization-form' -%}
              <div>
                <h2 class="visually-hidden" id="HeaderCountryLabel">{{ 'localization.country_label' | t }}</h2>
                {%- render 'country-localization', localPosition: 'HeaderCountry' -%}
              </div>
            {%- endform -%}
          </localization-form>
        {% endif %}

        {%- if section.settings.enable_language_selector and localization.available_languages.size > 1 -%}
          <localization-form class="small-hide medium-hide" data-prevent-hide>
            {%- form 'localization', id: 'HeaderLanguageForm', class: 'localization-form' -%}
              <div>
                <h2 class="visually-hidden" id="HeaderLanguageLabel">{{ 'localization.language_label' | t }}</h2>
                {%- render 'language-localization', localPosition: 'HeaderLanguage' -%}
              </div>
            {%- endform -%}
          </localization-form>
        {%- endif -%}
      </div>
      {% render 'header-search', input_id: 'Search-In-Modal' %}

      {%- if shop.customer_accounts_enabled -%}
        <a
          href="{%- if customer -%}{{ routes.account_url }}{%- else -%}{{ routes.account_login_url }}{%- endif -%}"
          class="header__icon header__icon--account link focus-inset{% if section.settings.menu != blank %} small-hide{% endif %}"
          rel="nofollow"
        >
          {%- if section.settings.enable_customer_avatar -%}
            <account-icon>
              {%- if customer and customer.has_avatar? -%}
                {{ customer | avatar }}
              {%- else -%}
                <span class="svg-wrapper">{{ 'icon-avatar.svg' | inline_asset_content }}</span>
              {%- endif -%}
            </account-icon>
          {%- else -%}
            <span class="svg-wrapper">{{ 'icon-avatar.svg' | inline_asset_content }}</span>
          {%- endif -%}
          <span class="visually-hidden">
            {%- liquid
              if customer
                echo 'customer.account_fallback' | t
              else
                echo 'customer.log_in' | t
              endif
            -%}
          </span>
        </a>
      {%- endif -%}

      {%- for block in section.blocks -%}
        {%- case block.type -%}
          {%- when '@app' -%}
            {% render block %}
        {%- endcase -%}
      {%- endfor -%}

      <a href="{{ routes.cart_url }}" class="header__icon header__icon--cart link focus-inset" id="cart-icon-bubble">
        <span class="svg-wrapper">{{ 'icon-bag.svg' | inline_asset_content }}</span>
        <span class="visually-hidden">{{ 'templates.cart.cart' | t }}</span>
        {%- if cart != empty -%}
          <div class="cart-count-bubble">
            {%- if cart.item_count < 100 -%}
              <span aria-hidden="true">{{ cart.item_count }}</span>
            {%- endif -%}
            <span class="visually-hidden">{{ 'sections.header.cart_count' | t: count: cart.item_count }}</span>
          </div>
        {%- endif -%}
      </a>
    </div>
  </header>
  {%- if section.settings.show_strip -%}
    <div
      class="header-strip"
      style="height: {{ section.settings.strip_height }}px;"
    >
      <div class="header-strip__container">
        {%- if section.settings.strip_image != blank -%}
          {{
            section.settings.strip_image
            | image_url: width: 2000
            | image_tag:
              loading: 'eager',
              width: section.settings.strip_image.width,
              height: section.settings.strip_image.height,
              class: 'header-strip__image'
          }}
        {%- endif -%}
        {%- if section.settings.show_strip_color -%}
          <div class="header-strip__color" style="background-color: {{ section.settings.strip_color }};"></div>
        {%- endif -%}
      </div>
    </div>
  {%- endif -%}
</{{ header_tag }}>

{%- if settings.cart_type == 'notification' -%}
  {%- render 'cart-notification',
    color_scheme: section.settings.color_scheme,
    desktop_menu_type: section.settings.menu_type_desktop
  -%}
{%- endif -%}

{% javascript %}
  class StickyHeader extends HTMLElement {
    constructor() {
      super();
    }

    connectedCallback() {
      this.header = document.querySelector('.section-header');
      this.headerIsAlwaysSticky =
        this.getAttribute('data-sticky-type') === 'always' ||
        this.getAttribute('data-sticky-type') === 'reduce-logo-size';
      this.headerBounds = {};
      this.isPortalNavVisible = false;

      this.setHeaderHeight();

      window.matchMedia('(max-width: 990px)').addEventListener('change', this.setHeaderHeight.bind(this));

      if (this.headerIsAlwaysSticky) {
        this.header.classList.add('shopify-section-header-sticky');
      }

      this.currentScrollTop = 0;
      this.preventReveal = false;
      this.predictiveSearch = this.querySelector('predictive-search');

      this.onScrollHandler = this.onScroll.bind(this);
      this.hideHeaderOnScrollUp = () => (this.preventReveal = true);

      this.addEventListener('preventHeaderReveal', this.hideHeaderOnScrollUp);
      window.addEventListener('scroll', this.onScrollHandler, false);

      // Listen for customer portal nav intersection
      document.addEventListener('customer-portal:nav-intersection', (event) => {
        this.isPortalNavVisible = event.detail.isIntersecting;
        if (this.isPortalNavVisible) {
          this.header.classList.remove('shopify-section-header-sticky', 'shopify-section-header-hidden');
        }
      });

      this.createObserver();
    }

    setHeaderHeight() {
      document.documentElement.style.setProperty('--header-height', `${this.header.offsetHeight}px`);
    }

    disconnectedCallback() {
      this.removeEventListener('preventHeaderReveal', this.hideHeaderOnScrollUp);
      window.removeEventListener('scroll', this.onScrollHandler);
    }

    createObserver() {
      let observer = new IntersectionObserver((entries, observer) => {
        this.headerBounds = entries[0].intersectionRect;
        observer.disconnect();
      });

      observer.observe(this.header);
    }

    onScroll() {
      const scrollTop = window.pageYOffset || document.documentElement.scrollTop;

      if (this.predictiveSearch && this.predictiveSearch.isOpen) return;

      // Don't process sticky behavior if portal nav is visible
      if (this.isPortalNavVisible) {
        this.header.classList.remove('shopify-section-header-sticky', 'shopify-section-header-hidden');
        return;
      }

      if (scrollTop > this.currentScrollTop && scrollTop > this.headerBounds.bottom) {
        this.header.classList.add('scrolled-past-header');
        if (this.preventHide) return;
        requestAnimationFrame(this.hide.bind(this));
      } else if (scrollTop < this.currentScrollTop && scrollTop > this.headerBounds.bottom) {
        this.header.classList.add('scrolled-past-header');
        if (!this.preventReveal) {
          requestAnimationFrame(this.reveal.bind(this));
        } else {
          window.clearTimeout(this.isScrolling);

          this.isScrolling = setTimeout(() => {
            this.preventReveal = false;
          }, 66);

          requestAnimationFrame(this.hide.bind(this));
        }
      } else if (scrollTop <= this.headerBounds.top) {
        this.header.classList.remove('scrolled-past-header');
        requestAnimationFrame(this.reset.bind(this));
      }

      this.currentScrollTop = scrollTop;
    }

    hide() {
      if (this.headerIsAlwaysSticky) return;
      this.header.classList.add('shopify-section-header-hidden', 'shopify-section-header-sticky');
      this.closeMenuDisclosure();
      this.closeSearchModal();
    }

    reveal() {
      if (this.headerIsAlwaysSticky) return;
      this.header.classList.add('shopify-section-header-sticky', 'animate');
      this.header.classList.remove('shopify-section-header-hidden');
    }

    reset() {
      if (this.headerIsAlwaysSticky) return;
      this.header.classList.remove('shopify-section-header-hidden', 'shopify-section-header-sticky', 'animate');
    }

    closeMenuDisclosure() {
      this.disclosures = this.disclosures || this.header.querySelectorAll('header-menu');
      this.disclosures.forEach((disclosure) => disclosure.close());
    }

    closeSearchModal() {
      this.searchModal = this.searchModal || this.header.querySelector('details-modal');
      this.searchModal.close(false);
    }
  }

  customElements.define('sticky-header', StickyHeader);
{% endjavascript %}

<script type="application/ld+json">
  {
    "@context": "http://schema.org",
    "@type": "Organization",
    "name": {{ shop.name | json }},
    {% if settings.logo %}
      "logo": {{ settings.logo | image_url: width: 500 | prepend: "https:" | json }},
    {% endif %}
    "sameAs": [
      {{ settings.social_twitter_link | json }},
      {{ settings.social_facebook_link | json }},
      {{ settings.social_pinterest_link | json }},
      {{ settings.social_instagram_link | json }},
      {{ settings.social_tiktok_link | json }},
      {{ settings.social_tumblr_link | json }},
      {{ settings.social_snapchat_link | json }},
      {{ settings.social_youtube_link | json }},
      {{ settings.social_vimeo_link | json }}
    ],
    "url": {{ request.origin | append: page.url | json }}
  }
</script>

{%- if request.page_type == 'index' -%}
  {% assign potential_action_target = request.origin | append: routes.search_url | append: '?q={search_term_string}' %}
  <script type="application/ld+json">
    {
      "@context": "http://schema.org",
      "@type": "WebSite",
      "name": {{ shop.name | json }},
      "potentialAction": {
        "@type": "SearchAction",
        "target": {{ potential_action_target | json }},
        "query-input": "required name=search_term_string"
      },
      "url": {{ request.origin | append: page.url | json }}
    }
  </script>
{%- endif -%}

{% schema %}
{
  "name": "t:sections.header.name",
  "class": "section-header",
  "max_blocks": 30,
  "settings": [
    {
      "type": "header",
      "content": "Header Strip"
    },
    {
      "type": "checkbox",
      "id": "show_strip",
      "default": true,
      "label": "Show header strip"
    },
    {
      "type": "image_picker",
      "id": "strip_image",
      "label": "Strip image"
    },
    {
      "type": "checkbox",
      "id": "show_strip_color",
      "default": true,
      "label": "Show strip color overlay"
    },
    {
      "type": "color",
      "id": "strip_color",
      "label": "Strip color",
      "default": "#000000",
      "info": "Used as overlay color on top of the image"
    },
    {
      "type": "range",
      "id": "strip_height",
      "min": 1,
      "max": 100,
      "step": 1,
      "unit": "px",
      "label": "Strip height",
      "default": 2
    },
    {
      "type": "select",
      "id": "logo_position",
      "options": [
        {
          "value": "top-left",
          "label": "t:sections.header.settings.logo_position.options__2.label"
        },
        {
          "value": "top-center",
          "label": "t:sections.header.settings.logo_position.options__3.label"
        },
        {
          "value": "middle-left",
          "label": "t:sections.header.settings.logo_position.options__1.label"
        },
        {
          "value": "middle-center",
          "label": "t:sections.header.settings.logo_position.options__4.label"
        }
      ],
      "default": "middle-left",
      "label": "t:sections.header.settings.logo_position.label",
      "info": "t:sections.header.settings.logo_help.content"
    },
    {
      "type": "select",
      "id": "mobile_logo_position",
      "options": [
        {
          "value": "center",
          "label": "t:sections.header.settings.mobile_logo_position.options__1.label"
        },
        {
          "value": "left",
          "label": "t:sections.header.settings.mobile_logo_position.options__2.label"
        }
      ],
      "default": "center",
      "label": "t:sections.header.settings.mobile_logo_position.label"
    },
    {
      "type": "link_list",
      "id": "menu",
      "default": "main-menu",
      "label": "t:sections.header.settings.menu.label"
    },
    {
      "type": "select",
      "id": "menu_type_desktop",
      "options": [
        {
          "value": "dropdown",
          "label": "t:sections.header.settings.menu_type_desktop.options__1.label"
        },
        {
          "value": "mega",
          "label": "t:sections.header.settings.menu_type_desktop.options__2.label"
        },
        {
          "value": "drawer",
          "label": "t:sections.header.settings.menu_type_desktop.options__3.label"
        }
      ],
      "default": "dropdown",
      "label": "t:sections.header.settings.menu_type_desktop.label"
    },
    {
      "type": "select",
      "id": "sticky_header_type",
      "options": [
        {
          "value": "none",
          "label": "t:sections.header.settings.sticky_header_type.options__1.label"
        },
        {
          "value": "on-scroll-up",
          "label": "t:sections.header.settings.sticky_header_type.options__2.label"
        },
        {
          "value": "always",
          "label": "t:sections.header.settings.sticky_header_type.options__3.label"
        },
        {
          "value": "reduce-logo-size",
          "label": "t:sections.header.settings.sticky_header_type.options__4.label"
        }
      ],
      "default": "on-scroll-up",
      "label": "t:sections.header.settings.sticky_header_type.label"
    },
    {
      "type": "text",
      "id": "hide_menu_items_desktop",
      "label": "Hide specific menu items on desktop",
      "info": "Enter menu item IDs separated by commas (e.g. 'HeaderMenu-clothes-all-clothing, HeaderMenu-sale')",
      "default": "none"
    },
    {
      "type": "checkbox",
      "id": "show_line_separator",
      "default": true,
      "label": "t:sections.header.settings.show_line_separator.label"
    },
    {
      "type": "header",
      "content": "t:sections.header.settings.header__1.content"
    },
    {
      "type": "color_scheme",
      "id": "color_scheme",
      "label": "t:sections.all.colors.label",
      "default": "scheme-1"
    },
    {
      "type": "color_scheme",
      "id": "menu_color_scheme",
      "label": "t:sections.header.settings.menu_color_scheme.label",
      "default": "scheme-1"
    },
    {
      "type": "header",
      "content": "t:sections.header.settings.header__utilities.content"
    },
    {
      "type": "checkbox",
      "id": "enable_country_selector",
      "default": true,
      "label": "t:sections.header.settings.enable_country_selector.label",
      "info": "t:sections.header.settings.enable_country_selector.info"
    },
    {
      "type": "checkbox",
      "id": "enable_language_selector",
      "default": true,
      "label": "t:sections.header.settings.enable_language_selector.label",
      "info": "t:sections.header.settings.enable_language_selector.info"
    },
    {
      "type": "checkbox",
      "id": "enable_customer_avatar",
      "default": true,
      "label": "t:sections.header.settings.enable_customer_avatar.label",
      "info": "t:sections.header.settings.enable_customer_avatar.info"
    },
    {
      "type": "header",
      "content": "t:sections.header.settings.mobile_layout.content"
    },
    {
      "type": "header",
      "content": "t:sections.all.spacing"
    },
    {
      "type": "range",
      "id": "margin_bottom",
      "min": 0,
      "max": 100,
      "step": 4,
      "unit": "px",
      "label": "t:sections.header.settings.margin_bottom.label",
      "default": 0
    },
    {
      "type": "header",
      "content": "t:sections.all.padding.section_padding_heading"
    },
    {
      "type": "range",
      "id": "padding_top",
      "min": 0,
      "max": 36,
      "step": 4,
      "unit": "px",
      "label": "t:sections.all.padding.padding_top",
      "default": 20
    },
    {
      "type": "range",
      "id": "padding_bottom",
      "min": 0,
      "max": 36,
      "step": 4,
      "unit": "px",
      "label": "t:sections.all.padding.padding_bottom",
      "default": 20
    }
  ],
  "blocks": [
    {
      "type": "@app"
    },
    {
      "type": "menu_title",
      "name": "Menu Title",
      "settings": [
        {
          "type": "text",
          "id": "menu_title",
          "label": "Menu Title",
          "info": "Enter the exact title of the menu this title belongs to"
        },
        {
          "type": "text",
          "id": "title_text",
          "label": "Title Text",
          "default": "Menu Title"
        },
        {
          "type": "select",
          "id": "title_style",
          "label": "Title Style",
          "options": [
            {
              "value": "h2",
              "label": "Heading 2"
            },
            {
              "value": "h3",
              "label": "Heading 3"
            },
            {
              "value": "h4",
              "label": "Heading 4"
            }
          ],
          "default": "h3"
        }
      ]
    },
    {
      "type": "menu_link_color",
      "name": "Menu Link Color",
      "settings": [
        {
          "type": "text",
          "id": "menu_link_handle",
          "label": "Menu Link Handle",
          "info": "Enter the handle of the menu link (e.g., 'clothing', 'accessories', 'sale')"
        },
        {
          "type": "color",
          "id": "link_color",
          "label": "Link Text Color",
          "default": "#000000"
        }
      ]
    },
    {
      "type": "header_menu",
      "name": "Header Menu",
      "settings": [
        {
          "type": "text",
          "id": "menu_title",
          "label": "Menu Title",
          "info": "Enter the exact title of the menu this block belongs to"
        }
      ]
    },
    {
      "type": "mega_menu_image",
      "name": "Mega Menu Image",
      "settings": [
        {
          "type": "text",
          "id": "menu_title",
          "label": "Menu Title",
          "info": "Enter the exact title of the menu this image belongs to"
        },
        {
          "type": "text",
          "id": "image_title",
          "label": "Image Title",
          "default": "Featured Image"
        },
        {
          "type": "url",
          "id": "image_link",
          "label": "Image Link"
        },
        {
          "type": "image_picker",
          "id": "image",
          "label": "Image"
        },
        {
          "type": "range",
          "id": "image_order",
          "min": -3,
          "max": 3,
          "step": 1,
          "label": "Image position in menu",
          "default": -1
        }
      ]
    },
    {
      "type": "mega_menu_collection",
      "name": "Mega Menu Collection",
      "settings": [
        {
          "type": "text",
          "id": "menu_title",
          "label": "Menu Title",
          "info": "Enter the exact title of the menu this collection belongs to"
        },
        {
          "type": "collection",
          "id": "collection",
          "label": "Collection"
        },
        {
          "type": "range",
          "id": "collection_order",
          "min": -3,
          "max": 3,
          "step": 1,
          "label": "Collection position in menu",
          "default": 2
        }
      ]
    },
    {
      "type": "mega_menu_product",
      "name": "Mega Menu Product",
      "settings": [
        {
          "type": "text",
          "id": "menu_title",
          "label": "Menu Title",
          "info": "Enter the exact title of the menu this product belongs to"
        },
        {
          "type": "product",
          "id": "product",
          "label": "Product"
        },
        {
          "type": "range",
          "id": "product_order",
          "min": -3,
          "max": 3,
          "step": 1,
          "label": "Product position in menu",
          "default": 3
        }
      ]
    },
    {
      "type": "mega_menu_announcement",
      "name": "Mega Menu Announcement",
      "settings": [
        {
          "type": "text",
          "id": "menu_title",
          "label": "Menu Title",
          "info": "Enter the exact title of the menu this announcement belongs to"
        },
        {
          "type": "text",
          "id": "announcement_text",
          "label": "Announcement text",
          "default": "Announcement text here"
        },
        {
          "type": "url",
          "id": "announcement_link",
          "label": "Announcement link"
        },
        {
          "type": "color_scheme",
          "id": "announcement_color",
          "label": "Announcement color scheme"
        }
      ]
    }
  ]
}
{% endschema %}
